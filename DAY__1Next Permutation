IP - 1 2 3
OP - 1 3 2
2 3 1 4 5
2 3 1 5 4

1 5 2 4 3 
1 5 3 2 4 

vector<int> nextPermutation(vector<int> &p, int n)
{
    int idx = -1;
    //find the break point
    for ( int i =n-2; i>=0; i--){
        if (p[i] < p[i+1]){
            idx = i;
            break;
        }
    }

    //if no breakpoint 

    if (idx == -1){
        reverse(p.begin(), p.end());
        return p;
    }

    //find the next greater element and swap them
    for (int i =n-1; i>idx; i--){
        if (p[i] > p[idx]){
            swap(p[i], p[idx]);
            break;
        }
    }

    //reverse from the break point right half
    reverse (p.begin()+idx+1, p.end() );

    return p;
    

}
